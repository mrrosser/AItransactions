import { z } from 'zod'; import { getSetting, setSetting } from '../store/settings'; import { encryptJSON, decryptJSON } from '../security/crypto'; const AwsCfg=z.object({ region:z.string().min(2), distributionId:z.string().optional(), s3Bucket:z.string().optional(), accessKeyId:z.string().min(16), secretAccessKey:z.string().min(16) }); type AwsCfg= z.infer<typeof AwsCfg>; const KEY='AWS_CONFIG_ENC'; export function saveAwsConfig(cfg:AwsCfg){ const enc=encryptJSON(AwsCfg.parse(cfg)); setSetting(KEY,enc) } export function readAwsConfig(redact=true){ const enc=getSetting(KEY); if(!enc) return null; const cfg=decryptJSON(enc); return redact?{...cfg,accessKeyId:cfg.accessKeyId.slice(0,4)+'…',secretAccessKey:cfg.secretAccessKey.slice(0,4)+'…'}:cfg }
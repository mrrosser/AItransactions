import crypto from 'crypto'
const ALG='aes-256-gcm'; function key(){ const s=process.env.AWS_CFG_SECRET||''; if(s.length<32) throw new Error('AWS_CFG_SECRET must be >=32 chars'); return crypto.createHash('sha256').update(s).digest() } export function encryptJSON(o:any){ const iv=crypto.randomBytes(12); const c=crypto.createCipheriv(ALG,key(),iv); const pt=Buffer.from(JSON.stringify(o),'utf8'); const enc=Buffer.concat([c.update(pt),c.final()]); const tag=c.getAuthTag(); return Buffer.concat([iv,tag,enc]).toString('base64') } export function decryptJSON(b64:string){ const b=Buffer.from(b64,'base64'); const iv=b.subarray(0,12); const tag=b.subarray(12,28); const enc=b.subarray(28); const d=crypto.createDecipheriv(ALG,key(),iv); d.setAuthTag(tag); const dec=Buffer.concat([d.update(enc),d.final()]); return JSON.parse(dec.toString('utf8')) }